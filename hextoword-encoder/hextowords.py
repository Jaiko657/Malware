import sys
import random
import numpy as np
from math import log, e


#get location of hex file error if not provided
if(len(sys.argv) == 1):
    exit("error: please provide file to encode")
fileLocation = sys.argv[1]

HexInputType = "default"
if(len(sys.argv) == 3):
    HexInputType = sys.argv[2]


with open(fileLocation, 'r') as file:
    data = file.read()

# String whitespace
data = data.replace("\"", '').replace(";", "").replace("\\x", "0x")
data = "".join(data.split())

# Create a dictionary to map hex values to words
hex_to_word = {'0': 'zero', '1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine', 'a': 'apple', 'b': 'banana', 'c': 'cherry', 'd': 'date', 'e': 'egg', 'f': 'fig'}
filler_words = ["Lumen", "Thump", "Blunt", "Glare", "Sonic", "Salty", "Hazel", "Witty", "Grief", "Haste", "zero"]

def encrypt(hex_values):
    encoded_words = []
    for hex_value in hex_values:
        if(hex_value[0:2] == "0x"):
            first = hex_value[2]
            second = hex_value[3]
        else:
            first = hex_value[0]
            second = hex_value[1]

        encoded_first = hex_to_word[first.lower()]
        encoded_second = hex_to_word[second.lower()]

        # uncomment below if randomised zero value needed, probably not needed
        #if (encoded_first == "zero"):
            #encoded_first = random.choice(filler_words)
        #if (encoded_second == "zero"):
            #encoded_second = random.choice(filler_words)

        encoded_words.append(encoded_first + " " + encoded_second)
    return encoded_words

if(HexInputType == "default"):
    hex = data.split(",")

if(HexInputType == "raw"):
    t = iter(data)
    data = ','.join(a+b for a,b in zip(t, t))
    hex = data.split(",")

if(HexInputType == "escaped"):
    hex = [data[i:i+4] for i in range(0, len(data), 4) if len(data[i:i+4]) == 4]

print(hex)
array = encrypt(hex)

print("\n[\"{}\"]".format("\", \"".join(array)))
print("size: " + str(len(hex)))